<!DOCTYPE html>
<html>

    <head>
        <meta charset='utf-8' />
        <% include ../template/c_lib_head.ejs %>
        <% include ../template/d_main_head.ejs %>
    </head>
     <script type="text/javascript">


            var client = new Dropbox.Client({key: 'n6fec5ssr1ahnex'});
            //google
            var CLIENT_ID = '642713611296-3g6cpseokmpu6sld8q0mhaa54sp0bl03.apps.googleusercontent.com';
            var SCOPES = 'https://www.googleapis.com/auth/drive';

            window.onload =function (){
                window.setTimeout(checkAuth, 1);

                var popup_Btn = document.getElementById("CLOUD");
                popup_Btn.onclick = go_popup;
            }

            function checkAuth() {
                alert('hi');
                var CLOUD = document.getElementById("CLOUD");
                CLOUD.onclick = go_popup;
                var DROPBOX = document.getElementById("DROPBOX");
                DROPBOX.onclick = authDropbox;
                var Btn_read = document.getElementById("Btn_read");
                Btn_read.onclick = readDropFileList;
                var Btn_write = document.getElementById("Btn_write");
                Btn_write.onclick = writeToDrop;
                gapi.auth.authorize(
                    {'client_id': CLIENT_ID, 'scope': SCOPES, 'immediate': true},
                    handleAuthResult);
            }

            function handleAuthResult(authResult) {
                var authButton = document.getElementById('authorizeButton');
                var filePicker = document.getElementById('filePicker');
                var googleBtnRead = document.getElementById('googleBtn_read');
                //listBtn.onclick =retrieveAllFiles;
                googleBtnRead.style.display = 'none';
                if (authResult && !authResult.error) {
                  // Access token has been successfully retrieved, requests can be sent to the API.
                  //authButton.style.display = 'block';
                  filePicker.style.display ='block';
                  filePicker.onchange = uploadFile;
                  googleBtnRead.style.display = 'block';
                  googleBtnRead.onclick = retrieveAllFiles;
                } else {
                  // No access token could be retrieved, show the button to start the authorization flow.
                  authButton.style.display = 'block';
                  authButton.onclick = function() {
                      gapi.auth.authorize(
                          {'client_id': CLIENT_ID, 'scope': SCOPES, 'immediate': false},
                          handleAuthResult);
                  };
                }
                if(client.isAuthenticated())
                {
                    alert('truehi');
                }
                else
                {
                    alert('nonoe');
                }


            }

            function authDropbox(){
                client.authenticate(function (error){
                    if(error){
                        alert('Authentication error'+error);
                    }
                    else
                        alert('hi drop auth');
                    });
                var datastoreManager = client.getDatastoreManager();
                    datastoreManager.openDefaultDatastore(function (error,datastore) {
                        if (error) {
                            alert('Error opening default datastore: ' + error);
                        }
                });
            }
            /////////
            function uploadFile(evt) {
                gapi.client.load('drive', 'v2', function() {
                    var file = evt.target.files[0];
                    insertFile(file);
                });
            }

      /**
       * Insert new file.
       *
       * @param {File} fileData File object to read data from.
       * @param {Function} callback Function to call when the request is complete.
       */
            function insertFile(fileData, callback) {
                const boundary = '-------314159265358979323846';
                const delimiter = "\r\n--" + boundary + "\r\n";
                const close_delim = "\r\n--" + boundary + "--";

                var reader = new FileReader();
                reader.readAsBinaryString(fileData);
                reader.onload = function(e) {
                    var contentType = fileData.type || 'application/octet-stream';
                    var metadata = {
                        'title': fileData.name,
                        'mimeType': contentType
                    };

                    var base64Data = btoa(reader.result);
                    var multipartRequestBody =
                        delimiter +
                        'Content-Type: application/json\r\n\r\n' +
                        JSON.stringify(metadata) +
                        delimiter +
                        'Content-Type: ' + contentType + '\r\n' +
                        'Content-Transfer-Encoding: base64\r\n' +
                        '\r\n' +
                        base64Data +
                        close_delim;

                    var request = gapi.client.request({
                        'path': '/upload/drive/v2/files',
                        'method': 'POST',
                        'params': {'uploadType': 'multipart'},
                        'headers': {
                        'Content-Type': 'multipart/mixed; boundary="' + boundary + '"'
                        },
                      'body': multipartRequestBody});
                    if (!callback) {
                        callback = function(file) {
                        console.log(file)
                        };
                    }
                  request.execute(callback);
                }
            }


            /////////
            function readDropFileList() {
                client.readdir('/', function (error,reply) {
                    if (error) {
                        alert('Error: ' + error);
                    } else {
                        console.log('===========readdir============')
                        console.log(reply);   

                    }
                });

                client.stat('/',{readDir :true},function(error,reply,stat,result)
                {
                    if (error) {
                        alert('Error: ' + error);
                    } else {
                        console.log('====read stat===')
                        console.log(reply);
                        console.log('=====fourth stat====')
                        console.log('stat is '+stat)
                        console.log(stat);
                        console.log('stat3 is '+stat[3])  
                        console.log('===result==='); 
                    }

                });
            }

            function writeToDrop() {
                client.writeFile('hello.txt', 'Hello, World!', function (error) {
                    if (error) {
                        alert('Error: ' + error);
                    } else {
                        alert('File written successfully!');
                    }
                });
            }

            function go_popup() {
                $('#popup').bPopup({
                    modal: false,
                    transition: 'slideDown',
                    transitionClose: 'slideDown'
                });
            };
            function retrieveAllFiles(callback) {
                alert('hi');
                var request = gapi.client.request({
                  'path': '/drive/v2/files',
                  'method': 'GET'
                })
                request.execute(function(resp){
                  console.log(resp.items);
                });
            }
        </script>

        <!--- -->
    <body ng-app="app" ng-controller = "Ctrl">
	<div id="real">
        <!-- MAIN CONTENT -->
        <div id = "topbar">
            <ul id="wid_set">
                <li class="addwidget" ng-click="show_add = !show_add" id="addwid">add
                    <ul ng-show="show_add" id="addlist">
                        <li class="addmemo">Memo</li>
                    </ul>
                </li>
                <li ng-click="show_del =!show_del" id="delwid">delete</li>
            </ul>
            <div id="gsearch">
                <form method="get" action="http://www.google.com/search" target="_blank">
                    <input type="text" name="q" size="30" placeholder="google search">
                    <button type = "submit" >search</button>
                </form>
            </div>
	<div id="info">
            <form action = "/logout" method="post">
                <p class="logout"><%= UserName %></p> <button ng-click="save()" class="logout" type = "submit"><img id = "logout" src = "/images/logout.png" /></button>
            </form>
            <div class="clock" >
                <span my-current-time="format"></span>
                <div>{{propiedadPrueba}}</div>
            </div>
	</div>
        </div>
        <div id="main">
            <div id = "home" >
                <% include ../template/d_main_cloud %>
                <!--
                <div id = "todolists" class="widget">
                     <img class="end"src="/users/GUEST/noun_17398.png"/>
                    <span>{{remain()}} of {{lists.length}} remaining</span>
                    [ <a href="" ng-click="archive()">archive</a> ]
                    <ul id = "todolist">
                        <li ng-repeat = "list in lists">
                            <input type = "checkbox" ng-model = "list.done">
                            <span class = "done-{{list.done}}">
                                {{list.text}};
                            </span>
                        </li>
                    </ul>

                    <form ng-submit = "todo()">
                        <input type = "text" ng-model = "todotext" size = "30" placeholder = "add new todo list" />
                        <input class = "btn-primary" type = "submit" value = "add" />
                    </form>
                    
                </div>
                <div ng-draggable class="widget w_memo">
                    <div class="delmemo">
                         <img ng-show="show_del" class="end"src="/users/GUEST/noun_17398.png"/>
                    </div>
                    <textarea rows="8" cols="25"></textarea>
                </div>
                -->
                

               <% var widgetmemo = JSON.parse(widget);
                  for(var i = 0; i < widgetmemo.widget.length; i++){ %>
                    <div ng-draggable class="widget w_memo" style="position: relative; z-index: 0; left: <%- widgetmemo.widget[i].left %>; top:  <%- widgetmemo.widget[i].top %>;" >
                        <div class="memo_end">
                            <img ng-show="show_del" class="end"src="/images/wid_del.png"/>
                        </div>
                        <textarea rows="8" cols="25"><%- widgetmemo.widget[i].memo %></textarea>
                    </div>
                <%   }  %>



            </div>

            <div id = "dock" ng-controller = "DragDropCtrl">
                <div id = "ddock">
                    <div class = "subdock" id = "leftdock" droppable drop = "handleDrop()">
                        <ul id="leftdocklist">
                    <% 
                      for(var i = 0; i < userapp.length; i++){ 
                            if(userapp[i].position=="left"){ %>
                            <li><a href = "<%- userapp[i].url %>" target = "_blank">
                                <img src = "<%- userapp[i].fav %>" class ="tosave"/></a>
                            </li>
                    <%   }}  %>
                        </ul>
                    </div>
                    <div class = "subdock" id = "centerdock">
                        <button id = "apps" ng-click = "slide()"><img src="/images/apps.png" /></button>
                    </div>
                    <div class = "subdock" id = "rightdock" droppable drop = "handleDrop()">
                        <ul id="rightdocklist">
                    <% 
                      for(var i = 0; i < userapp.length; i++){ 
                            if(userapp[i].position=="right"){%>
                            <li><a href = "<%- userapp[i].url %>" target = "_blank">
                                <img src = "<%- userapp[i].fav %>" class ="tosave"/></a>
                            </li>
                    <%   }}  %>
                        </ul>
                    </div>
                </div>
                <div id = "panel" ng-show="slideapps" >
                    
                    <div id = "modifyurl">
                        <input id = "slurl" type = "text" name = "url" ng-show = "slideurl" size = "25" placeholder = "http://"/>
                        <button id = "addurl" ng-click = "addurl()" >
                            <img src = "/images/addurl.png" class = "addurll"/>
                        </button>
                        
                        <!--<button id = "addurl2" type = "submit" ng-show = "slideurl" class = "addurll" ><img src = "/users/GUEST/noun_21727.png"/></button>-->
                    </div>
                    <div id = "trash" droppable>
                        <img src = "/images/trash.png" />
                    </div>
                    <ul id = "panelul" droppable>
                    <% 
                      for(var i = 0; i < userapp.length; i++){ 
                            if(userapp[i].position=="center"){%>
                            <li><a href = "<%- userapp[i].url %>" id = "<%- userapp[i].fav %>" target = "_blank" >
                                <img src = "<%- userapp[i].fav %>" id = "<%- userapp[i].fav %>" class ="tosave" draggable/></a>
                            </li>
                    <%   }}  %>
                    </ul>
                </div>
                
            </div>
                                
         </div>

	</div>
    </body>
</html>
