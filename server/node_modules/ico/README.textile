h2. Introduction

Ico is a JavaScript graph library that uses "Raphael":http://raphaeljs.com/ to draw.  This means it can draw charts in multiple browsers (including IE).

Raphael is the only dependency.

* "Documentation":http://alexyoung.github.com/ico
* "Examples":http://alexyoung.github.com/ico/examples.html

h3. News

* [2011-09-30] 0.3.3: Added <code>label_step</code> and <code>label_count</code> options so numerical labels can be controlled
* [2011-08-30] 0.3.2: No longer extending native prototypes
* [2011-08-24] 0.3.1: Bug fix for LineGraph, migrated tests to QUnit, moved Jakefile.js to Makefile
* [2011-03-09] Passing default JSHint, and a minified version is now available
* [2011-03-09] Added documentation and published it to http://alexyoung.github.com/ico/
* [2011-03-09] 0.3.0 released: Split project into separate files, added build script, fixes for HorizontalBarGraph
* [2011-03-01] 0.2.2 released: Ico.SparkLine will now work correctly, particularly in IE6

h3. Targeted graph types

* Sparklines
* Line graphs
* Bar graphs

h3. Design considerations and goals

* Clarity: Use of white-space to help lend clarity to graphs, nominal scale vs. ordinal scale
* Simplicity: Minimal use of decorations and lines, reliance on the Gestalt principle of closure
* Conciseness: Avoidance of graph types that don't efficiently present data (pie charts, radar maps)

These goals are based on recommendations in Stephen Few's books:

* Show Me the Numbers: Designing Tables and Graphs to Enlighten
* Information Dashboard Design

Which was generally in turn based on Edward Tufte's work.

h3. Test-Driven

Built with QUnit and Node unit tests.

h3. Todo

* Humanize labels: rather than showing 1,000,000 optionally show "1m"

h2. Examples

See index.html for current API usage.  This will change as I evolve the API to support the targeted graph types.

h2. Requirements

* "Raphael":http://raphaeljs.com

h3. License

MIT License.
